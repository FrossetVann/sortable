{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, watch } from 'vue';\nimport draggable from 'vuedraggable';\nimport { projects } from '../projects.js';\nexport default {\n  props: ['projectId'],\n  data() {\n    return {\n      boardData: {\n        columns: []\n      },\n      projectName: ''\n    };\n  },\n  watch: {\n    projectId: 'loadData'\n  },\n  created() {\n    this.loadData();\n  },\n  methods: {\n    loadData() {\n      const project = projects.find(p => p.id === parseInt(this.projectId));\n      if (project) {\n        this.projectName = project.name;\n        this.boardData.columns = project.columns;\n      }\n    },\n    addColumn() {\n      const newColumn = {\n        name: 'Новая колонка',\n        tasks: [],\n        order: this.boardData.columns.length + 1\n      };\n      this.boardData.columns.push(newColumn);\n    },\n    addItem(columnIndex) {\n      if (this.columns[columnIndex]) {\n        const deadline = new Date();\n        deadline.setDate(deadline.getDate() + 1);\n        this.columns[columnIndex].tasks.push({\n          name: '',\n          showNameInput: false,\n          columnIndex,\n          deadline: deadline.toISOString()\n        });\n      }\n    },\n    removeTask(columnIndex, taskIndex) {\n      if (this.columns[columnIndex] && this.columns[columnIndex].tasks[taskIndex]) {\n        this.columns[columnIndex].tasks.splice(taskIndex, 1);\n      }\n    },\n    removeColumn(columnIndex) {\n      if (this.columns[columnIndex]) {\n        this.columns.splice(columnIndex, 1);\n      }\n    },\n    toggleNameInput(columnIndex) {\n      this.columns.forEach((column, index) => {\n        if (index !== columnIndex) {\n          column.showNameInput = false;\n        }\n      });\n      this.columns[columnIndex] && (this.columns[columnIndex].showNameInput = !this.columns[columnIndex].showNameInput);\n    },\n    toggleTaskNameInput(columnIndex, taskIndex) {\n      this.columns[columnIndex]?.tasks.forEach((task, index) => {\n        if (index !== taskIndex) {\n          task.showNameInput = false;\n        }\n      });\n      this.columns[columnIndex]?.tasks[taskIndex] && (this.columns[columnIndex].tasks[taskIndex].showNameInput = !this.columns[columnIndex].tasks[taskIndex].showNameInput);\n    },\n    onTaskDragEnd() {},\n    updateTimeRemaining() {\n      const now = new Date();\n      this.columns.forEach(column => {\n        column.tasks.forEach(task => {\n          const deadlineDate = new Date(task.deadline);\n          const timeDifference = deadlineDate - now;\n          const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\n          const hours = Math.floor(timeDifference % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n          const minutes = Math.floor(timeDifference % (1000 * 60 * 60) / (1000 * 60));\n          const seconds = Math.floor(timeDifference % (1000 * 60) / 1000);\n          task.timeRemaining = `${days} д. ${hours} ч. ${minutes} м. ${seconds} с.`;\n        });\n      });\n    }\n  },\n  computed: {\n    // Преобразование порядка колонок в массив колонок\n    columns() {\n      return this.boardData.columns.sort((a, b) => a.order - b.order);\n    }\n  },\n  components: {\n    draggable\n  }\n};","map":{"version":3,"names":["ref","watch","draggable","projects","props","data","boardData","columns","projectName","projectId","created","loadData","methods","project","find","p","id","parseInt","name","addColumn","newColumn","tasks","order","length","push","addItem","columnIndex","deadline","Date","setDate","getDate","showNameInput","toISOString","removeTask","taskIndex","splice","removeColumn","toggleNameInput","forEach","column","index","toggleTaskNameInput","task","onTaskDragEnd","updateTimeRemaining","now","deadlineDate","timeDifference","days","Math","floor","hours","minutes","seconds","timeRemaining","computed","sort","a","b","components"],"sources":["C:\\Users\\user\\Desktop\\tasker5\\sortable\\src\\views\\BoardComp.vue"],"sourcesContent":["<template>\n  <main>\n    <h1>{{ projectName }} - Доска</h1>\n    <draggable v-model=\"boardData.columns\" tag=\"div\" class=\"workspace\">\n      <template #item=\"{ element: column, index: i }\">\n        <draggable v-model=\"column.tasks\" tag=\"ul\" class=\"column\" :key=\"i\" @end=\"onTaskDragEnd\">\n        <template #header>\n          <input\n            v-if=\"column.showNameInput\"\n            v-model=\"column.name\" class=\"column-name-input column-name\" type=\"text\"\n            @keyup.enter=\"toggleNameInput(i)\"\n          />\n          <h3\n            v-else\n            @click=\"toggleNameInput(i)\"\n            class=\"column-name\">\n            <p v-show=\"column.name === ''\">{{ i }}</p>\n            {{ column.name }}\n          </h3>\n          <button class=\"delete btn\" @click=\"removeColumn(i)\">удалить</button>\n        </template>\n        <template #item=\"{ element: task, index: j }\">\n          <li class=\"task\" :key=\"j\">\n            <input\n              v-if=\"task.showNameInput\"\n              v-model=\"task.name\" class=\"task-name-input\" type=\"text\"\n              @keyup.enter=\"toggleTaskNameInput(i, j)\"\n            />\n            <h4\n              v-else\n              @click=\"toggleTaskNameInput(i, j)\"\n              class=\"task-name\">\n              <p v-show=\"task.name === ''\">{{ j }}</p>\n              {{ task.name }}\n              {{ task.deadline }}\n              {{ task.timeRemaining }}\n            </h4>\n            <button class=\"delete btn\" @click=\"removeTask(i, j)\">удалить</button>\n          </li>\n        </template>\n        <template #footer>\n          <div class=\"form-control\">\n            <button @click=\"addItem(i)\">создать таск</button>\n          </div>\n        </template>\n      </draggable>\n      </template>\n    </draggable>\n    <div class=\"form-control\">\n      <button @click=\"addColumn\">создать колонку</button>\n    </div>\n  </main>\n</template>\n\n<script>\nimport { ref, watch } from 'vue';\nimport draggable from 'vuedraggable';\nimport { projects } from '../projects.js';\n\nexport default {\n  props: ['projectId'],\n  data() {\n    return {\n      boardData: {\n        columns: [],\n      },\n      projectName: '',\n    };\n  },\n  watch: {\n    projectId: 'loadData',\n  },\n  created() {\n    this.loadData();\n  },\n  methods: {\n    loadData() {\n      const project = projects.find((p) => p.id === parseInt(this.projectId));\n      if (project) {\n        this.projectName = project.name;\n        this.boardData.columns = project.columns;\n      }\n    },\n    addColumn() {\n      const newColumn = {\n        name: 'Новая колонка',\n        tasks: [],\n        order: this.boardData.columns.length + 1,\n      };\n      this.boardData.columns.push(newColumn);\n    },\n    addItem(columnIndex) {\n      if (this.columns[columnIndex]) {\n\n        const deadline = new Date();\n        deadline.setDate(deadline.getDate() + 1); \n        this.columns[columnIndex].tasks.push({\n          name: '',\n          showNameInput: false,\n          columnIndex,\n          deadline: deadline.toISOString(), \n        });\n      }\n    },\n    removeTask(columnIndex, taskIndex) {\n      if (this.columns[columnIndex] && this.columns[columnIndex].tasks[taskIndex]) {\n        this.columns[columnIndex].tasks.splice(taskIndex, 1);\n      }\n    },\n    removeColumn(columnIndex) {\n      if (this.columns[columnIndex]) {\n        this.columns.splice(columnIndex, 1);\n      }\n    },\n    toggleNameInput(columnIndex) {\n      this.columns.forEach((column, index) => {\n        if (index !== columnIndex) {\n          column.showNameInput = false;\n        }\n      });\n      this.columns[columnIndex] && (this.columns[columnIndex].showNameInput = !this.columns[columnIndex].showNameInput);\n    },\n    toggleTaskNameInput(columnIndex, taskIndex) {\n      this.columns[columnIndex]?.tasks.forEach((task, index) => {\n        if (index !== taskIndex) {\n          task.showNameInput = false;\n        }\n      });\n      this.columns[columnIndex]?.tasks[taskIndex] && (this.columns[columnIndex].tasks[taskIndex].showNameInput = !this.columns[columnIndex].tasks[taskIndex].showNameInput);\n    },\n    onTaskDragEnd() {\n      \n    },\n    updateTimeRemaining() {\n      const now = new Date();\n      this.columns.forEach(column => {\n        column.tasks.forEach(task => {\n          const deadlineDate = new Date(task.deadline);\n          const timeDifference = deadlineDate - now;\n          const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\n          const hours = Math.floor((timeDifference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n          const minutes = Math.floor((timeDifference % (1000 * 60 * 60)) / (1000 * 60));\n          const seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);\n          task.timeRemaining = `${days} д. ${hours} ч. ${minutes} м. ${seconds} с.`;\n        });\n      });\n    },\n  },\n  computed: {\n    // Преобразование порядка колонок в массив колонок\n    columns() {\n      return this.boardData.columns.sort((a, b) => a.order - b.order);\n    },\n  },\n  components: {\n    draggable,\n  },\n};\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}