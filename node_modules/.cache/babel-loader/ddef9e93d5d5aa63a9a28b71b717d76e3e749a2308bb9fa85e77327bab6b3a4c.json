{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport draggable from 'vuedraggable';\nexport default {\n  data() {\n    return {\n      columns: ['fgwgrgg', 'ggggggggg', 'dddddddd', 'bbbbbbbb', 'lllllll']\n    };\n  },\n  methods: {\n    addColumn() {\n      this.columns.push({\n        name: '',\n        tasks: [],\n        showNameInput: false\n      });\n    },\n    addItem(columnIndex) {\n      this.columns[columnIndex].tasks.push({\n        name: '',\n        showNameInput: false\n      });\n    },\n    removeTask(columnIndex, taskIndex) {\n      this.columns[columnIndex].tasks.splice(taskIndex, 1);\n    },\n    removeColumn(columnIndex) {\n      this.columns.splice(columnIndex, 1);\n    },\n    toggleNameInput(columnIndex) {\n      this.columns[columnIndex].showNameInput = !this.columns[columnIndex].showNameInput;\n    },\n    toggleTaskNameInput(columnIndex, taskIndex) {\n      this.columns[columnIndex].tasks[taskIndex].showNameInput = !this.columns[columnIndex].tasks[taskIndex].showNameInput;\n    }\n  },\n  components: {\n    draggable\n  }\n};","map":{"version":3,"names":["ref","draggable","data","columns","methods","addColumn","push","name","tasks","showNameInput","addItem","columnIndex","removeTask","taskIndex","splice","removeColumn","toggleNameInput","toggleTaskNameInput","components"],"sources":["C:\\Users\\user\\Desktop\\tasker5\\sortable\\src\\components\\BoardComp.vue"],"sourcesContent":["<template>\n  <h1>gwegwg</h1>\n  <div class=\"form-control\">\n      <button @click=\"addColumn\">создать колонку</button>\n    </div>\n  <draggable v-model=\"columns\" tag=\"ul\">\n    <template #item=\"{ element: column }\">\n      <li>\n      <input\n      v-if=\"column.showNameInput\"\n      v-model=\"column.name\" class=\"column-name-input column-name\" type=\"text\"\n      @keyup.enter=\"toggleNameInput(i)\"\n      >\n      <h3\n      v-else\n      @click=\"toggleNameInput(i)\"\n      class=\"column-name\">\n      <p v-show=\"column.name === ''\">{{ i }}</p>\n       {{ column.name }}</h3>\n      <button class=\"delete btn\" @click=\"removeColumn(i)\">удалить</button>\n      <li\n      v-for=\"(task, j) in column.tasks\" :key=\"j\">\n        <input\n        v-if=\"task.showNameInput\"\n        v-model=\"task.name\" class=\"task-name-input\" type=\"text\"\n        @keyup.enter=\"toggleTaskNameInput(i, j)\"\n        >\n        <h4\n        v-else\n        @click=\"toggleTaskNameInput(i, j)\"\n        class=\"task-name\">\n        <p v-show=\"column.name === ''\">{{ j }}</p>\n        {{ task.name }}</h4>\n        <button class=\"delete btn\" @click=\"removeTask(i, j)\">удалить</button>\n      </li>\n      <div class=\"form-control\">\n        <button @click=\"addItem(i)\">создать таск</button>\n      </div>\n    </li>\n    </template>\n  </draggable>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport draggable from 'vuedraggable';\n\nexport default {\n  data() {\n    return {\n      columns: [\n        'fgwgrgg',\n        'ggggggggg',\n        'dddddddd',\n        'bbbbbbbb',\n        'lllllll',\n      ],\n    };\n  },\n  methods: {\n    addColumn () {\n      this.columns.push({\n        name: '',\n        tasks: [],\n        showNameInput: false\n      })\n    },\n    addItem (columnIndex) {\n      this.columns[columnIndex].tasks.push({\n        name: '',\n        showNameInput: false\n      })\n    },\n    removeTask (columnIndex, taskIndex) {\n      this.columns[columnIndex].tasks.splice(taskIndex, 1)\n    },\n    removeColumn (columnIndex) {\n      this.columns.splice(columnIndex, 1)\n    },\n    toggleNameInput (columnIndex) {\n      this.columns[columnIndex].showNameInput = !this.columns[columnIndex].showNameInput\n    },\n    toggleTaskNameInput (columnIndex, taskIndex) {\n      this.columns[columnIndex].tasks[taskIndex].showNameInput = !this.columns[columnIndex].tasks[taskIndex].showNameInput\n    }\n  },\n  components: {\n    draggable,\n  },\n};\n</script>\n\n\n"],"mappings":";AA4CA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,SAAQ,MAAO,cAAc;AAEpC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,CACP,SAAS,EACT,WAAW,EACX,UAAU,EACV,UAAU,EACV,SAAS;IAEb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,SAAQA,CAAA,EAAK;MACX,IAAI,CAACF,OAAO,CAACG,IAAI,CAAC;QAChBC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,aAAa,EAAE;MACjB,CAAC;IACH,CAAC;IACDC,OAAMA,CAAGC,WAAW,EAAE;MACpB,IAAI,CAACR,OAAO,CAACQ,WAAW,CAAC,CAACH,KAAK,CAACF,IAAI,CAAC;QACnCC,IAAI,EAAE,EAAE;QACRE,aAAa,EAAE;MACjB,CAAC;IACH,CAAC;IACDG,UAASA,CAAGD,WAAW,EAAEE,SAAS,EAAE;MAClC,IAAI,CAACV,OAAO,CAACQ,WAAW,CAAC,CAACH,KAAK,CAACM,MAAM,CAACD,SAAS,EAAE,CAAC;IACrD,CAAC;IACDE,YAAWA,CAAGJ,WAAW,EAAE;MACzB,IAAI,CAACR,OAAO,CAACW,MAAM,CAACH,WAAW,EAAE,CAAC;IACpC,CAAC;IACDK,eAAcA,CAAGL,WAAW,EAAE;MAC5B,IAAI,CAACR,OAAO,CAACQ,WAAW,CAAC,CAACF,aAAY,GAAI,CAAC,IAAI,CAACN,OAAO,CAACQ,WAAW,CAAC,CAACF,aAAY;IACnF,CAAC;IACDQ,mBAAkBA,CAAGN,WAAW,EAAEE,SAAS,EAAE;MAC3C,IAAI,CAACV,OAAO,CAACQ,WAAW,CAAC,CAACH,KAAK,CAACK,SAAS,CAAC,CAACJ,aAAY,GAAI,CAAC,IAAI,CAACN,OAAO,CAACQ,WAAW,CAAC,CAACH,KAAK,CAACK,SAAS,CAAC,CAACJ,aAAY;IACrH;EACF,CAAC;EACDS,UAAU,EAAE;IACVjB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}