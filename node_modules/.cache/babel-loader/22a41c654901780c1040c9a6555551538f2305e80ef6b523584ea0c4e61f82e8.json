{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, vShow as _vShow, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = [\"onUpdate:modelValue\", \"onKeyup\"];\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onUpdate:modelValue\", \"onKeyup\"];\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  class: \"form-control\"\n};\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = {\n  class: \"form-control\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_draggable = _resolveComponent(\"draggable\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_draggable, {\n    modelValue: $data.columns,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.columns = $event),\n    tag: \"div\",\n    class: \"workspace\",\n    group: \"tasks\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.columns, (column, i) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: i,\n        class: \"column\"\n      }, [column.showNameInput ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n        key: 0,\n        \"onUpdate:modelValue\": $event => column.name = $event,\n        class: \"column-name-input column-name\",\n        type: \"text\",\n        onKeyup: _withKeys($event => $options.toggleNameInput(i), [\"enter\"])\n      }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_1)), [[_vModelText, column.name]]) : (_openBlock(), _createElementBlock(\"h3\", {\n        key: 1,\n        onClick: $event => $options.toggleNameInput(i),\n        class: \"column-name\"\n      }, [_withDirectives(_createElementVNode(\"p\", null, _toDisplayString(i), 513 /* TEXT, NEED_PATCH */), [[_vShow, column.name === '']]), _createTextVNode(\" \" + _toDisplayString(column.name), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_2)), _createElementVNode(\"button\", {\n        class: \"delete btn\",\n        onClick: $event => $options.removeColumn(i)\n      }, \"удалить\", 8 /* PROPS */, _hoisted_3), _createVNode(_component_draggable, {\n        modelValue: column.tasks,\n        \"onUpdate:modelValue\": $event => column.tasks = $event,\n        tag: \"ul\",\n        group: \"tasks\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(column.tasks, (task, j) => {\n          return _openBlock(), _createElementBlock(\"li\", {\n            key: j\n          }, [task.showNameInput ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n            key: 0,\n            \"onUpdate:modelValue\": $event => task.name = $event,\n            class: \"task-name-input\",\n            type: \"text\",\n            onKeyup: _withKeys($event => $options.toggleTaskNameInput(i, j), [\"enter\"])\n          }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_4)), [[_vModelText, task.name]]) : (_openBlock(), _createElementBlock(\"h4\", {\n            key: 1,\n            onClick: $event => $options.toggleTaskNameInput(i, j),\n            class: \"task-name\"\n          }, [_withDirectives(_createElementVNode(\"p\", null, _toDisplayString(j), 513 /* TEXT, NEED_PATCH */), [[_vShow, task.name === '']]), _createTextVNode(\" \" + _toDisplayString(task.name), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_5)), _createElementVNode(\"button\", {\n            class: \"delete btn\",\n            onClick: $event => $options.removeTask(i, j)\n          }, \"удалить\", 8 /* PROPS */, _hoisted_6)]);\n        }), 128 /* KEYED_FRAGMENT */))]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n        onClick: $event => $options.addItem(i)\n      }, \"создать таск\", 8 /* PROPS */, _hoisted_8)])]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addColumn && $options.addColumn(...args))\n  }, \"создать колонку\")])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createVNode","_component_draggable","$data","columns","$event","tag","group","_Fragment","_renderList","column","i","key","showNameInput","name","type","onKeyup","_withKeys","$options","toggleNameInput","onClick","_createElementVNode","_toDisplayString","removeColumn","_hoisted_3","tasks","task","j","toggleTaskNameInput","removeTask","_hoisted_6","_hoisted_7","addItem","_hoisted_8","_hoisted_9","_cache","args","addColumn"],"sources":["C:\\Users\\user\\Desktop\\tasker5\\sortable\\src\\components\\BoardComp.vue"],"sourcesContent":["<template>\n  <div>\n    <draggable v-model=\"columns\" tag=\"div\" class=\"workspace\" group=\"tasks\">\n      <div v-for=\"(column, i) in columns\" :key=\"i\" class=\"column\">\n        <input\n          v-if=\"column.showNameInput\"\n          v-model=\"column.name\" class=\"column-name-input column-name\" type=\"text\"\n          @keyup.enter=\"toggleNameInput(i)\"\n        />\n        <h3\n          v-else\n          @click=\"toggleNameInput(i)\"\n          class=\"column-name\"\n        >\n          <p v-show=\"column.name === ''\">{{ i }}</p>\n          {{ column.name }}\n        </h3>\n        <button class=\"delete btn\" @click=\"removeColumn(i)\">удалить</button>\n        <draggable\n          v-model=\"column.tasks\"\n          tag=\"ul\"\n          group=\"tasks\"\n        >\n          <li v-for=\"(task, j) in column.tasks\" :key=\"j\">\n            <input\n              v-if=\"task.showNameInput\"\n              v-model=\"task.name\" class=\"task-name-input\" type=\"text\"\n              @keyup.enter=\"toggleTaskNameInput(i, j)\"\n            />\n            <h4\n              v-else\n              @click=\"toggleTaskNameInput(i, j)\"\n              class=\"task-name\"\n            >\n              <p v-show=\"task.name === ''\">{{ j }}</p>\n              {{ task.name }}\n            </h4>\n            <button class=\"delete btn\" @click=\"removeTask(i, j)\">удалить</button>\n          </li>\n        </draggable>\n        <div class=\"form-control\">\n          <button @click=\"addItem(i)\">создать таск</button>\n        </div>\n      </div>\n    </draggable>\n    <div class=\"form-control\">\n      <button @click=\"addColumn\">создать колонку</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport draggable from 'vuedraggable';\n\nexport default {\n  data() {\n    return {\n      columns: [],\n    };\n  },\n  methods: {\n    addColumn() {\n      this.columns.push({\n        name: '',\n        tasks: [],\n        showNameInput: false,\n      });\n    },\n    addItem(columnIndex) {\n      if (this.columns[columnIndex]) {\n        this.columns[columnIndex].tasks.push({\n          name: '',\n          showNameInput: false,\n        });\n      }\n    },\n    removeTask(columnIndex, taskIndex) {\n      if (this.columns[columnIndex] && this.columns[columnIndex].tasks[taskIndex]) {\n        this.columns[columnIndex].tasks.splice(taskIndex, 1);\n      }\n    },\n    removeColumn(columnIndex) {\n      if (this.columns[columnIndex]) {\n        this.columns.splice(columnIndex, 1);\n      }\n    },\n    toggleNameInput(columnIndex) {\n      if (this.columns[columnIndex]) {\n        this.columns[columnIndex].showNameInput = !this.columns[columnIndex].showNameInput;\n      }\n    },\n    toggleTaskNameInput(columnIndex, taskIndex) {\n      if (this.columns[columnIndex] && this.columns[columnIndex].tasks[taskIndex]) {\n        this.columns[columnIndex].tasks[taskIndex].showNameInput = !this.columns[columnIndex].tasks[taskIndex].showNameInput;\n      }\n    },\n  },\n  components: {\n    draggable,\n  },\n};\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}