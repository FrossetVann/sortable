{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport draggable from 'vuedraggable';\nimport { projects } from '../projects';\nexport default {\n  data() {\n    return {\n      boardData: {\n        columns: [{\n          name: 'Колонка 1',\n          tasks: [{\n            name: 'Задача 1.1',\n            order: 1,\n            deadline: '2023-12-31'\n          }, {\n            name: 'Задача 1.2',\n            order: 2,\n            deadline: '2024-12-31'\n          }],\n          order: 1\n        }, {\n          name: 'Колонка 2',\n          tasks: [{\n            name: 'Задача 2.1',\n            order: 1,\n            deadline: '2023-12-31'\n          }, {\n            name: 'Задача 2.2',\n            order: 2,\n            deadline: '2024-12-31'\n          }],\n          order: 2\n        }]\n      },\n      timestamp: \"\"\n    };\n  },\n  // created() {\n  //   setInterval(this.updateTimeRemaining, 1000);\n  // },\n  methods: {\n    addColumn() {\n      const newColumn = {\n        name: 'Новая колонка',\n        tasks: [],\n        order: this.boardData.columns.length + 1\n      };\n      this.boardData.columns.push(newColumn);\n    },\n    addItem(columnIndex) {\n      if (this.columns[columnIndex]) {\n        const deadline = new Date();\n        deadline.setDate(deadline.getDate() + 1);\n        this.columns[columnIndex].tasks.push({\n          name: '',\n          showNameInput: false,\n          columnIndex,\n          deadline: deadline.toISOString()\n        });\n      }\n    },\n    removeTask(columnIndex, taskIndex) {\n      if (this.columns[columnIndex] && this.columns[columnIndex].tasks[taskIndex]) {\n        this.columns[columnIndex].tasks.splice(taskIndex, 1);\n      }\n    },\n    removeColumn(columnIndex) {\n      if (this.columns[columnIndex]) {\n        this.columns.splice(columnIndex, 1);\n      }\n    },\n    toggleNameInput(columnIndex) {\n      this.columns.forEach((column, index) => {\n        if (index !== columnIndex) {\n          column.showNameInput = false;\n        }\n      });\n      this.columns[columnIndex] && (this.columns[columnIndex].showNameInput = !this.columns[columnIndex].showNameInput);\n    },\n    toggleTaskNameInput(columnIndex, taskIndex) {\n      this.columns[columnIndex]?.tasks.forEach((task, index) => {\n        if (index !== taskIndex) {\n          task.showNameInput = false;\n        }\n      });\n      this.columns[columnIndex]?.tasks[taskIndex] && (this.columns[columnIndex].tasks[taskIndex].showNameInput = !this.columns[columnIndex].tasks[taskIndex].showNameInput);\n    },\n    onTaskDragEnd() {},\n    updateTimeRemaining() {\n      const now = new Date();\n      this.columns.forEach(column => {\n        column.tasks.forEach(task => {\n          const deadlineDate = new Date(task.deadline);\n          const timeDifference = deadlineDate - now;\n          const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\n          const hours = Math.floor(timeDifference % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n          const minutes = Math.floor(timeDifference % (1000 * 60 * 60) / (1000 * 60));\n          const seconds = Math.floor(timeDifference % (1000 * 60) / 1000);\n          task.timeRemaining = `${days} д. ${hours} ч. ${minutes} м. ${seconds} с.`;\n        });\n      });\n    }\n  },\n  computed: {\n    // Преобразование порядка колонок в массив колонок\n    columns() {\n      return this.boardData.columns.sort((a, b) => a.order - b.order);\n    }\n  },\n  components: {\n    draggable\n  }\n};","map":{"version":3,"names":["ref","draggable","projects","data","boardData","columns","name","tasks","order","deadline","timestamp","methods","addColumn","newColumn","length","push","addItem","columnIndex","Date","setDate","getDate","showNameInput","toISOString","removeTask","taskIndex","splice","removeColumn","toggleNameInput","forEach","column","index","toggleTaskNameInput","task","onTaskDragEnd","updateTimeRemaining","now","deadlineDate","timeDifference","days","Math","floor","hours","minutes","seconds","timeRemaining","computed","sort","a","b","components"],"sources":["C:\\Users\\user\\Desktop\\tasker5\\sortable\\src\\views\\BoardComp.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>{{ currentProject.name }}</h1>\n    <draggable v-model=\"currentProject.boards\" tag=\"div\" class=\"workspace\">\n      <template #item=\"{ element: board, index: i }\">\n        <div class=\"board\" :key=\"i\">\n          <h2>{{ board.name }}</h2>\n          <draggable v-model=\"board.columns\" tag=\"div\" class=\"column\" :key=\"i\" @end=\"onTaskDragEnd\">\n            <template #item=\"{ element: column, index: j }\">\n              <div class=\"column\" :key=\"j\">\n                <h3>{{ column.name }}</h3>\n                <draggable v-model=\"column.tasks\" tag=\"ul\" class=\"tasks\" :key=\"j\" @end=\"onTaskDragEnd\">\n                  <template #item=\"{ element: task, index: k }\">\n                    <li class=\"task\" :key=\"k\">\n                      <h4>{{ task.name }}</h4>\n                      <p>Deadline: {{ task.deadline }}</p>\n                      <p>{{ task.timeRemaining }}</p>\n                      <button @click=\"removeTask(i, j, k)\">Удалить задачу</button>\n                    </li>\n                  </template>\n                </draggable>\n                <button @click=\"addItem(i, j)\">Добавить задачу</button>\n              </div>\n            </template>\n          </draggable>\n          <button @click=\"addColumn(i)\">Добавить колонку</button>\n        </div>\n      </template>\n    </draggable>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport draggable from 'vuedraggable';\nimport { projects } from '../projects';\n\nexport default {\n  data() {\n    return {\n      boardData: {\n        columns: [\n          {\n            name: 'Колонка 1',\n            tasks: [\n              { name: 'Задача 1.1', order: 1, deadline: '2023-12-31' },\n              { name: 'Задача 1.2', order: 2, deadline: '2024-12-31' },\n            ],\n            order: 1,\n          },\n          {\n            name: 'Колонка 2',\n            tasks: [\n              { name: 'Задача 2.1', order: 1, deadline: '2023-12-31' },\n              { name: 'Задача 2.2', order: 2, deadline: '2024-12-31' },\n            ],\n            order: 2,\n          },\n        ],\n      },\n      timestamp: \"\"\n    };\n  },\n  // created() {\n  //   setInterval(this.updateTimeRemaining, 1000);\n  // },\n  methods: {\n    addColumn() {\n      const newColumn = {\n        name: 'Новая колонка',\n        tasks: [],\n        order: this.boardData.columns.length + 1,\n      };\n      this.boardData.columns.push(newColumn);\n    },\n    addItem(columnIndex) {\n      if (this.columns[columnIndex]) {\n\n        const deadline = new Date();\n        deadline.setDate(deadline.getDate() + 1); \n        this.columns[columnIndex].tasks.push({\n          name: '',\n          showNameInput: false,\n          columnIndex,\n          deadline: deadline.toISOString(), \n        });\n      }\n    },\n    removeTask(columnIndex, taskIndex) {\n      if (this.columns[columnIndex] && this.columns[columnIndex].tasks[taskIndex]) {\n        this.columns[columnIndex].tasks.splice(taskIndex, 1);\n      }\n    },\n    removeColumn(columnIndex) {\n      if (this.columns[columnIndex]) {\n        this.columns.splice(columnIndex, 1);\n      }\n    },\n    toggleNameInput(columnIndex) {\n      this.columns.forEach((column, index) => {\n        if (index !== columnIndex) {\n          column.showNameInput = false;\n        }\n      });\n      this.columns[columnIndex] && (this.columns[columnIndex].showNameInput = !this.columns[columnIndex].showNameInput);\n    },\n    toggleTaskNameInput(columnIndex, taskIndex) {\n      this.columns[columnIndex]?.tasks.forEach((task, index) => {\n        if (index !== taskIndex) {\n          task.showNameInput = false;\n        }\n      });\n      this.columns[columnIndex]?.tasks[taskIndex] && (this.columns[columnIndex].tasks[taskIndex].showNameInput = !this.columns[columnIndex].tasks[taskIndex].showNameInput);\n    },\n    onTaskDragEnd() {\n      \n    },\n    updateTimeRemaining() {\n      const now = new Date();\n      this.columns.forEach(column => {\n        column.tasks.forEach(task => {\n          const deadlineDate = new Date(task.deadline);\n          const timeDifference = deadlineDate - now;\n          const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\n          const hours = Math.floor((timeDifference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n          const minutes = Math.floor((timeDifference % (1000 * 60 * 60)) / (1000 * 60));\n          const seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);\n          task.timeRemaining = `${days} д. ${hours} ч. ${minutes} м. ${seconds} с.`;\n        });\n      });\n    },\n  },\n  computed: {\n    // Преобразование порядка колонок в массив колонок\n    columns() {\n      return this.boardData.columns.sort((a, b) => a.order - b.order);\n    },\n  },\n  components: {\n    draggable,\n  },\n};\n</script>\n"],"mappings":";AAiCA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,SAAQ,MAAO,cAAc;AACpC,SAASC,QAAO,QAAS,aAAa;AAEtC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;QACTC,OAAO,EAAE,CACP;UACEC,IAAI,EAAE,WAAW;UACjBC,KAAK,EAAE,CACL;YAAED,IAAI,EAAE,YAAY;YAAEE,KAAK,EAAE,CAAC;YAAEC,QAAQ,EAAE;UAAa,CAAC,EACxD;YAAEH,IAAI,EAAE,YAAY;YAAEE,KAAK,EAAE,CAAC;YAAEC,QAAQ,EAAE;UAAa,CAAC,CACzD;UACDD,KAAK,EAAE;QACT,CAAC,EACD;UACEF,IAAI,EAAE,WAAW;UACjBC,KAAK,EAAE,CACL;YAAED,IAAI,EAAE,YAAY;YAAEE,KAAK,EAAE,CAAC;YAAEC,QAAQ,EAAE;UAAa,CAAC,EACxD;YAAEH,IAAI,EAAE,YAAY;YAAEE,KAAK,EAAE,CAAC;YAAEC,QAAQ,EAAE;UAAa,CAAC,CACzD;UACDD,KAAK,EAAE;QACT,CAAC;MAEL,CAAC;MACDE,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACD;EACA;EACA;EACAC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,MAAMC,SAAQ,GAAI;QAChBP,IAAI,EAAE,eAAe;QACrBC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,IAAI,CAACJ,SAAS,CAACC,OAAO,CAACS,MAAK,GAAI;MACzC,CAAC;MACD,IAAI,CAACV,SAAS,CAACC,OAAO,CAACU,IAAI,CAACF,SAAS,CAAC;IACxC,CAAC;IACDG,OAAOA,CAACC,WAAW,EAAE;MACnB,IAAI,IAAI,CAACZ,OAAO,CAACY,WAAW,CAAC,EAAE;QAE7B,MAAMR,QAAO,GAAI,IAAIS,IAAI,CAAC,CAAC;QAC3BT,QAAQ,CAACU,OAAO,CAACV,QAAQ,CAACW,OAAO,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAACf,OAAO,CAACY,WAAW,CAAC,CAACV,KAAK,CAACQ,IAAI,CAAC;UACnCT,IAAI,EAAE,EAAE;UACRe,aAAa,EAAE,KAAK;UACpBJ,WAAW;UACXR,QAAQ,EAAEA,QAAQ,CAACa,WAAW,CAAC;QACjC,CAAC,CAAC;MACJ;IACF,CAAC;IACDC,UAAUA,CAACN,WAAW,EAAEO,SAAS,EAAE;MACjC,IAAI,IAAI,CAACnB,OAAO,CAACY,WAAW,KAAK,IAAI,CAACZ,OAAO,CAACY,WAAW,CAAC,CAACV,KAAK,CAACiB,SAAS,CAAC,EAAE;QAC3E,IAAI,CAACnB,OAAO,CAACY,WAAW,CAAC,CAACV,KAAK,CAACkB,MAAM,CAACD,SAAS,EAAE,CAAC,CAAC;MACtD;IACF,CAAC;IACDE,YAAYA,CAACT,WAAW,EAAE;MACxB,IAAI,IAAI,CAACZ,OAAO,CAACY,WAAW,CAAC,EAAE;QAC7B,IAAI,CAACZ,OAAO,CAACoB,MAAM,CAACR,WAAW,EAAE,CAAC,CAAC;MACrC;IACF,CAAC;IACDU,eAAeA,CAACV,WAAW,EAAE;MAC3B,IAAI,CAACZ,OAAO,CAACuB,OAAO,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;QACtC,IAAIA,KAAI,KAAMb,WAAW,EAAE;UACzBY,MAAM,CAACR,aAAY,GAAI,KAAK;QAC9B;MACF,CAAC,CAAC;MACF,IAAI,CAAChB,OAAO,CAACY,WAAW,MAAM,IAAI,CAACZ,OAAO,CAACY,WAAW,CAAC,CAACI,aAAY,GAAI,CAAC,IAAI,CAAChB,OAAO,CAACY,WAAW,CAAC,CAACI,aAAa,CAAC;IACnH,CAAC;IACDU,mBAAmBA,CAACd,WAAW,EAAEO,SAAS,EAAE;MAC1C,IAAI,CAACnB,OAAO,CAACY,WAAW,CAAC,EAAEV,KAAK,CAACqB,OAAO,CAAC,CAACI,IAAI,EAAEF,KAAK,KAAK;QACxD,IAAIA,KAAI,KAAMN,SAAS,EAAE;UACvBQ,IAAI,CAACX,aAAY,GAAI,KAAK;QAC5B;MACF,CAAC,CAAC;MACF,IAAI,CAAChB,OAAO,CAACY,WAAW,CAAC,EAAEV,KAAK,CAACiB,SAAS,MAAM,IAAI,CAACnB,OAAO,CAACY,WAAW,CAAC,CAACV,KAAK,CAACiB,SAAS,CAAC,CAACH,aAAY,GAAI,CAAC,IAAI,CAAChB,OAAO,CAACY,WAAW,CAAC,CAACV,KAAK,CAACiB,SAAS,CAAC,CAACH,aAAa,CAAC;IACvK,CAAC;IACDY,aAAaA,CAAA,EAAG,CAEhB,CAAC;IACDC,mBAAmBA,CAAA,EAAG;MACpB,MAAMC,GAAE,GAAI,IAAIjB,IAAI,CAAC,CAAC;MACtB,IAAI,CAACb,OAAO,CAACuB,OAAO,CAACC,MAAK,IAAK;QAC7BA,MAAM,CAACtB,KAAK,CAACqB,OAAO,CAACI,IAAG,IAAK;UAC3B,MAAMI,YAAW,GAAI,IAAIlB,IAAI,CAACc,IAAI,CAACvB,QAAQ,CAAC;UAC5C,MAAM4B,cAAa,GAAID,YAAW,GAAID,GAAG;UACzC,MAAMG,IAAG,GAAIC,IAAI,CAACC,KAAK,CAACH,cAAa,IAAK,IAAG,GAAI,EAAC,GAAI,EAAC,GAAI,EAAE,CAAC,CAAC;UAC/D,MAAMI,KAAI,GAAIF,IAAI,CAACC,KAAK,CAAEH,cAAa,IAAK,IAAG,GAAI,EAAC,GAAI,EAAC,GAAI,EAAE,CAAC,IAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC,CAAC;UACrF,MAAMK,OAAM,GAAIH,IAAI,CAACC,KAAK,CAAEH,cAAa,IAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC,IAAK,IAAG,GAAI,EAAE,CAAC,CAAC;UAC7E,MAAMM,OAAM,GAAIJ,IAAI,CAACC,KAAK,CAAEH,cAAa,IAAK,IAAG,GAAI,EAAE,CAAC,GAAI,IAAI,CAAC;UACjEL,IAAI,CAACY,aAAY,GAAK,GAAEN,IAAI,OAAOG,KAAK,OAAOC,OAAO,OAAOC,OAAO,KAAK;QAC3E,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC;EACDE,QAAQ,EAAE;IACR;IACAxC,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACD,SAAS,CAACC,OAAO,CAACyC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACvC,KAAI,GAAIwC,CAAC,CAACxC,KAAK,CAAC;IACjE;EACF,CAAC;EACDyC,UAAU,EAAE;IACVhD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}