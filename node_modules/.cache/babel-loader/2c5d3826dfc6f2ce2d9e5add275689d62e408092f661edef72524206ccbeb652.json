{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"User Info\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.getUser && $options.getUser(...args))\n  }, \"Get User\"), $data.userInfo ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"p\", null, \"ID: \" + _toDisplayString($data.userInfo.id), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Name: \" + _toDisplayString($data.userInfo.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Is Human: \" + _toDisplayString($data.userInfo.isHuman), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","onClick","_cache","args","$options","getUser","$data","userInfo","_hoisted_1","_hoisted_2","_toDisplayString","id","name","isHuman"],"sources":["C:\\Users\\user\\Desktop\\tasker5\\sortable\\src\\components\\TestGrpc.vue"],"sourcesContent":["// YourVueComponent.vue\r\n\r\n<template>\r\n  <div>\r\n    <button @click=\"getUser\">Get User</button>\r\n    <div v-if=\"userInfo\">\r\n      <h2>User Info</h2>\r\n      <p>ID: {{ userInfo.id }}</p>\r\n      <p>Name: {{ userInfo.name }}</p>\r\n      <p>Is Human: {{ userInfo.isHuman }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport grpcClient from '../grpcClient';\r\nimport { GetRequest } from '../../../../Task_tracker_back-main/pkg/user_v1/service.pb.go';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      userInfo: null,\r\n    };\r\n  },\r\n  methods: {\r\n    async getUser() {\r\n      const request = new GetRequest();\r\n      request.setId(1); // Установите необходимые параметры запроса\r\n\r\n      try {\r\n        const response = await grpcClient.get(request, {});\r\n        const userInfo = response.getInfo();\r\n\r\n        this.userInfo = {\r\n          id: userInfo.getId(),\r\n          name: userInfo.getName(),\r\n          isHuman: userInfo.getIsHuman(),\r\n        };\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;;;gCAMMA,mBAAA,CAAkB,YAAd,WAAS;;uBAHjBC,mBAAA,CAQM,cAPJD,mBAAA,CAA0C;IAAjCE,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;KAAE,UAAQ,GACtBG,KAAA,CAAAC,QAAQ,I,cAAnBP,mBAAA,CAKM,OAAAQ,UAAA,GAJJC,UAAkB,EAClBV,mBAAA,CAA4B,WAAzB,MAAI,GAAAW,gBAAA,CAAGJ,KAAA,CAAAC,QAAQ,CAACI,EAAE,kBACrBZ,mBAAA,CAAgC,WAA7B,QAAM,GAAAW,gBAAA,CAAGJ,KAAA,CAAAC,QAAQ,CAACK,IAAI,kBACzBb,mBAAA,CAAuC,WAApC,YAAU,GAAAW,gBAAA,CAAGJ,KAAA,CAAAC,QAAQ,CAACM,OAAO,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}