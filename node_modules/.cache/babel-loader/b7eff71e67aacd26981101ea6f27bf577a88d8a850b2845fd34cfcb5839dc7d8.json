{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vShow as _vShow, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"доска\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"onUpdate:modelValue\", \"onKeyup\"];\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"onUpdate:modelValue\", \"onKeyup\"];\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  class: \"form-control\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = {\n  class: \"form-control\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_draggable = _resolveComponent(\"draggable\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createVNode(_component_draggable, {\n    modelValue: $data.columns,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.columns = $event),\n    tag: \"div\",\n    class: \"workspace\"\n  }, {\n    item: _withCtx(({\n      element: column,\n      index: i\n    }) => [_createCommentVNode(\" <ul class=\\\"column\\\" :key=\\\"i\\\"> \"), (_openBlock(), _createBlock(_component_draggable, {\n      modelValue: _ctx.tasks,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.tasks = $event),\n      tag: \"ul\",\n      class: \"column\",\n      key: i\n    }, {\n      item: _withCtx(({\n        element: task,\n        index: j\n      }) => [(_openBlock(), _createElementBlock(\"li\", {\n        class: \"task\",\n        key: j\n      }, [task.showNameInput ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n        key: 0,\n        \"onUpdate:modelValue\": $event => task.name = $event,\n        class: \"task-name-input\",\n        type: \"text\",\n        onKeyup: _withKeys($event => $options.toggleTaskNameInput(i, j), [\"enter\"])\n      }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_5)), [[_vModelText, task.name]]) : (_openBlock(), _createElementBlock(\"h4\", {\n        key: 1,\n        onClick: $event => $options.toggleTaskNameInput(i, j),\n        class: \"task-name\"\n      }, [_withDirectives(_createElementVNode(\"p\", null, _toDisplayString(j), 513 /* TEXT, NEED_PATCH */), [[_vShow, task.name === '']]), _createTextVNode(\" \" + _toDisplayString(task.name), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_6)), _createElementVNode(\"button\", {\n        class: \"delete btn\",\n        onClick: $event => $options.removeTask(i, j)\n      }, \"удалить\", 8 /* PROPS */, _hoisted_7)]))]),\n      default: _withCtx(() => [column.showNameInput ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n        key: 0,\n        \"onUpdate:modelValue\": $event => column.name = $event,\n        class: \"column-name-input column-name\",\n        type: \"text\",\n        onKeyup: _withKeys($event => $options.toggleNameInput(i), [\"enter\"])\n      }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_2)), [[_vModelText, column.name]]) : (_openBlock(), _createElementBlock(\"h3\", {\n        key: 1,\n        onClick: $event => $options.toggleNameInput(i),\n        class: \"column-name\"\n      }, [_withDirectives(_createElementVNode(\"p\", null, _toDisplayString(i), 513 /* TEXT, NEED_PATCH */), [[_vShow, column.name === '']]), _createTextVNode(\" \" + _toDisplayString(column.name), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_3)), _createElementVNode(\"button\", {\n        class: \"delete btn\",\n        onClick: $event => $options.removeColumn(i)\n      }, \"удалить\", 8 /* PROPS */, _hoisted_4)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\"])), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n      onClick: $event => $options.addItem(i)\n    }, \"создать таск\", 8 /* PROPS */, _hoisted_9)]), _createCommentVNode(\" </ul> \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.addColumn && $options.addColumn(...args))\n  }, \"создать колонку\")])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_hoisted_1","_createVNode","_component_draggable","$data","columns","$event","tag","item","_withCtx","element","column","index","i","_createCommentVNode","_createBlock","_ctx","tasks","key","task","j","_createElementBlock","showNameInput","name","type","onKeyup","_withKeys","$options","toggleTaskNameInput","onClick","_toDisplayString","removeTask","_hoisted_7","toggleNameInput","removeColumn","_hoisted_4","_hoisted_8","addItem","_hoisted_9","_hoisted_10","_cache","args","addColumn"],"sources":["C:\\Users\\user\\Desktop\\tasker5\\sortable\\src\\components\\BoardComp.vue"],"sourcesContent":["<template>\n  <h1>доска</h1>\n  <draggable v-model=\"columns\" tag=\"div\" class=\"workspace\">\n    <template #item=\"{ element: column, index: i }\">\n      <!-- <ul class=\"column\" :key=\"i\"> -->\n        <draggable v-model=\"tasks\" tag=\"ul\" class=\"column\" :key=\"i\">\n        <input\n          v-if=\"column.showNameInput\"\n          v-model=\"column.name\" class=\"column-name-input column-name\" type=\"text\"\n          @keyup.enter=\"toggleNameInput(i)\"\n        />\n        <h3\n          v-else\n          @click=\"toggleNameInput(i)\"\n          class=\"column-name\">\n          <p v-show=\"column.name === ''\">{{ i }}</p>\n          {{ column.name }}\n        </h3>\n        <button class=\"delete btn\" @click=\"removeColumn(i)\">удалить</button>\n        \n        <template #item=\"{ element: task, index: j }\">\n        <li class=\"task\" :key=\"j\">\n          <input\n            v-if=\"task.showNameInput\"\n            v-model=\"task.name\" class=\"task-name-input\" type=\"text\"\n            @keyup.enter=\"toggleTaskNameInput(i, j)\"\n          />\n          <h4\n            v-else\n            @click=\"toggleTaskNameInput(i, j)\"\n            class=\"task-name\">\n            <p v-show=\"task.name === ''\">{{ j }}</p>\n            {{ task.name }}\n          </h4>\n          <button class=\"delete btn\" @click=\"removeTask(i, j)\">удалить</button>\n        </li>\n        </template>\n        </draggable>\n        <div class=\"form-control\">\n          <button @click=\"addItem(i)\">создать таск</button>\n        </div>\n      <!-- </ul> -->\n\n    </template>\n  </draggable>\n  <div class=\"form-control\">\n    <button @click=\"addColumn\">создать колонку</button>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport draggable from 'vuedraggable';\n\nexport default {\n  data() {\n    return {\n      columns: [],\n    };\n  },\n  methods: {\n    addColumn() {\n      this.columns.push({\n        name: '',\n        tasks: [],\n        showNameInput: false,\n      });\n    },\n    addItem(columnIndex) {\n      if (this.columns[columnIndex]) {\n        this.columns[columnIndex].tasks.push({\n          name: '',\n          showNameInput: false,\n        });\n      }\n    },\n    removeTask(columnIndex, taskIndex) {\n      if (this.columns[columnIndex] && this.columns[columnIndex].tasks[taskIndex]) {\n        this.columns[columnIndex].tasks.splice(taskIndex, 1);\n      }\n    },\n    removeColumn(columnIndex) {\n      if (this.columns[columnIndex]) {\n        this.columns.splice(columnIndex, 1);\n      }\n    },\n    toggleNameInput(columnIndex) {\n      if (this.columns[columnIndex]) {\n        this.columns[columnIndex].showNameInput = !this.columns[columnIndex].showNameInput;\n      }\n    },\n    toggleTaskNameInput(columnIndex, taskIndex) {\n      if (this.columns[columnIndex] && this.columns[columnIndex].tasks[taskIndex]) {\n        this.columns[columnIndex].tasks[taskIndex].showNameInput = !this.columns[columnIndex].tasks[taskIndex].showNameInput;\n      }\n    },\n  },\n  components: {\n    draggable,\n  },\n};\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}