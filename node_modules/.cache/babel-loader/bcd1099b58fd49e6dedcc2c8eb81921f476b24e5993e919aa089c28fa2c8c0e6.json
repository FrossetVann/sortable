{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"gwegwg\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"form-control\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_draggable = _resolveComponent(\"draggable\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.addColumn && _ctx.addColumn(...args))\n  }, \"создать колонку\")]), _createVNode(_component_draggable, {\n    modelValue: $data.columns,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.columns = $event),\n    tag: \"ul\"\n  }, {\n    item: _withCtx(({\n      element: column\n    }) => [_createElementVNode(\"li\", null, _toDisplayString(column), 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_hoisted_1","_hoisted_2","onClick","_cache","args","_ctx","addColumn","_createVNode","_component_draggable","$data","columns","$event","tag","item","_withCtx","element","column","_toDisplayString"],"sources":["C:\\Users\\user\\Desktop\\tasker5\\sortable\\src\\App.vue"],"sourcesContent":["<template>\n  <h1>gwegwg</h1>\n  <div class=\"form-control\">\n      <button @click=\"addColumn\">создать колонку</button>\n    </div>\n  <draggable v-model=\"columns\" tag=\"ul\">\n    <template #item=\"{ element: column }\">\n      <li>{{ column }}</li>\n    </template>\n  </draggable>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport draggable from 'vuedraggable';\n\nexport default {\n  data() {\n    return {\n      columns: [\n        'fgwgrgg',\n        'ggggggggg',\n        'dddddddd',\n        'bbbbbbbb',\n        'lllllll',\n      ],\n    };\n  },\n  components: {\n    draggable,\n  },\n};\n</script>\n\n\n"],"mappings":";gCACEA,mBAAA,CAAe,YAAX,QAAM;;EACLC,KAAK,EAAC;AAAc;;;6DADzBC,UAAe,EACfF,mBAAA,CAEQ,OAFRG,UAEQ,GADJH,mBAAA,CAAmD;IAA1CI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,SAAA,IAAAD,IAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,iBAAe,E,GAE9CG,YAAA,CAIYC,oBAAA;gBAJQC,KAAA,CAAAC,OAAO;+DAAPD,KAAA,CAAAC,OAAO,GAAAC,MAAA;IAAEC,GAAG,EAAC;;IACpBC,IAAI,EAAAC,QAAA,CACb,CAAqB;MAAAC,OAAA,EADKC;IAAM,OAChClB,mBAAA,CAAqB,YAAAmB,gBAAA,CAAdD,MAAM,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}