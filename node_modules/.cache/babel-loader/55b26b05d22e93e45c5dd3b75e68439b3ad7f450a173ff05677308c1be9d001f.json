{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport draggable from 'vuedraggable';\nexport default {\n  data() {\n    return {\n      columns: [],\n      timestamp: \"\"\n    };\n  },\n  created() {\n    setInterval(this.getNow, 1000);\n  },\n  methods: {\n    addColumn() {\n      this.columns.push({\n        name: '',\n        tasks: [],\n        showNameInput: false\n      });\n    },\n    addItem(columnIndex) {\n      if (this.columns[columnIndex]) {\n        // Установим дедлайн через 3 дня от текущего момента\n        const deadline = new Date();\n        deadline.setDate(deadline.getDate() + 3); // Установим дедлайн через 3 дня\n        this.columns[columnIndex].tasks.push({\n          name: '',\n          showNameInput: false,\n          columnIndex,\n          deadline: deadline.toISOString() // Сохраняем дедлайн в формате ISO\n        });\n      }\n    },\n    removeTask(columnIndex, taskIndex) {\n      if (this.columns[columnIndex] && this.columns[columnIndex].tasks[taskIndex]) {\n        this.columns[columnIndex].tasks.splice(taskIndex, 1);\n      }\n    },\n    removeColumn(columnIndex) {\n      if (this.columns[columnIndex]) {\n        this.columns.splice(columnIndex, 1);\n      }\n    },\n    toggleNameInput(columnIndex) {\n      this.columns.forEach((column, index) => {\n        if (index !== columnIndex) {\n          column.showNameInput = false;\n        }\n      });\n      this.columns[columnIndex] && (this.columns[columnIndex].showNameInput = !this.columns[columnIndex].showNameInput);\n    },\n    toggleTaskNameInput(columnIndex, taskIndex) {\n      this.columns[columnIndex]?.tasks.forEach((task, index) => {\n        if (index !== taskIndex) {\n          task.showNameInput = false;\n        }\n      });\n      this.columns[columnIndex]?.tasks[taskIndex] && (this.columns[columnIndex].tasks[taskIndex].showNameInput = !this.columns[columnIndex].tasks[taskIndex].showNameInput);\n    },\n    onTaskDragEnd() {\n      // Метод, вызываемый при завершении перетаскивания задачи\n      // Здесь вы можете выполнить дополнительные действия после перемещения задачи\n    },\n    timeRemaining(deadline) {\n      const now = new Date();\n      const deadlineDate = new Date(deadline);\n      const timeDifference = deadlineDate - now;\n      const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(timeDifference % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      const minutes = Math.floor(timeDifference % (1000 * 60 * 60) / (1000 * 60));\n      const seconds = Math.floor(timeDifference % (1000 * 60) / 1000);\n      return `${days} дней, ${hours} часов, ${minutes} минут, ${seconds} секунд`;\n    },\n    getNow: function () {\n      const today = new Date();\n      const date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n      const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n      const dateTime = date + ' ' + time;\n      this.timestamp = dateTime;\n\n      // Обновляем время до дедлайна для каждой задачи\n      this.columns.forEach(column => {\n        column.tasks.forEach(task => {\n          task.timeRemaining = this.timeRemaining(task.deadline);\n        });\n      });\n    }\n  },\n  components: {\n    draggable\n  }\n};","map":{"version":3,"names":["ref","draggable","data","columns","timestamp","created","setInterval","getNow","methods","addColumn","push","name","tasks","showNameInput","addItem","columnIndex","deadline","Date","setDate","getDate","toISOString","removeTask","taskIndex","splice","removeColumn","toggleNameInput","forEach","column","index","toggleTaskNameInput","task","onTaskDragEnd","timeRemaining","now","deadlineDate","timeDifference","days","Math","floor","hours","minutes","seconds","today","date","getFullYear","getMonth","time","getHours","getMinutes","getSeconds","dateTime","components"],"sources":["C:\\Users\\user\\Desktop\\tasker5\\sortable\\src\\views\\BoardComp.vue"],"sourcesContent":["<template>\n  <h1>доска</h1>\n  <draggable v-model=\"columns\" tag=\"div\" class=\"workspace\">\n    <template #item=\"{ element: column, index: i }\">\n      <draggable v-model=\"column.tasks\" tag=\"ul\" class=\"column\" :key=\"i\" @end=\"onTaskDragEnd\">\n        <template #header>\n        <input\n          v-if=\"column.showNameInput\"\n          v-model=\"column.name\" class=\"column-name-input column-name\" type=\"text\"\n          @keyup.enter=\"toggleNameInput(i)\"\n        />\n        \n        <h3\n          v-else\n          @click=\"toggleNameInput(i)\"\n          class=\"column-name\">\n          <p v-show=\"column.name === ''\">{{ i }}</p>\n          {{ column.name }}\n        </h3>\n        <button class=\"delete btn\" @click=\"removeColumn(i)\">удалить</button>\n        </template>\n        <template #item=\"{ element: task, index: j }\">\n        <li class=\"task\" :key=\"j\">\n          <input\n            v-if=\"task.showNameInput\"\n            v-model=\"task.name\" class=\"task-name-input\" type=\"text\"\n            @keyup.enter=\"toggleTaskNameInput(i, j)\"\n          />\n          <h4\n            v-else\n            @click=\"toggleTaskNameInput(i, j)\"\n            class=\"task-name\">\n            <p v-show=\"task.name === ''\">{{ j }}</p>\n            {{ task.name }}\n            {{ timeRemaining(task.deadline) }}\n          </h4>\n          <button class=\"delete btn\" @click=\"removeTask(i, j)\">удалить</button>\n        \n        </li>\n        </template>\n        <template #footer>\n        <div class=\"form-control\">\n          <button @click=\"addItem(i)\">создать таск</button>\n        </div>\n      </template>\n      <!-- </ul> -->\n    \n    </draggable>\n    </template>\n  </draggable>\n  <div class=\"form-control\">\n    <button @click=\"addColumn\">создать колонку</button>\n\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport draggable from 'vuedraggable';\n\nexport default {\n  data() {\n    return {\n      columns: [],\n      timestamp: \"\"\n    };\n  },\n  created() {\n                setInterval(this.getNow, 1000);\n            },\n  methods: {\n    addColumn() {\n      this.columns.push({\n        name: '',\n        tasks: [],\n        showNameInput: false,\n      });\n    },\n    addItem(columnIndex) {\n  if (this.columns[columnIndex]) {\n    // Установим дедлайн через 3 дня от текущего момента\n    const deadline = new Date();\n    deadline.setDate(deadline.getDate() + 3); // Установим дедлайн через 3 дня\n    this.columns[columnIndex].tasks.push({\n      name: '',\n      showNameInput: false,\n      columnIndex,\n      deadline: deadline.toISOString(), // Сохраняем дедлайн в формате ISO\n        });\n      }\n    },\n\n    removeTask(columnIndex, taskIndex) {\n      if (this.columns[columnIndex] && this.columns[columnIndex].tasks[taskIndex]) {\n        this.columns[columnIndex].tasks.splice(taskIndex, 1);\n      }\n    },\n    removeColumn(columnIndex) {\n      if (this.columns[columnIndex]) {\n        this.columns.splice(columnIndex, 1);\n      }\n    },\n    toggleNameInput(columnIndex) {\n      this.columns.forEach((column, index) => {\n        if (index !== columnIndex) {\n          column.showNameInput = false;\n        }\n      });\n      this.columns[columnIndex] && (this.columns[columnIndex].showNameInput = !this.columns[columnIndex].showNameInput);\n    },\n    toggleTaskNameInput(columnIndex, taskIndex) {\n      this.columns[columnIndex]?.tasks.forEach((task, index) => {\n        if (index !== taskIndex) {\n          task.showNameInput = false;\n        }\n      });\n      this.columns[columnIndex]?.tasks[taskIndex] && (this.columns[columnIndex].tasks[taskIndex].showNameInput = !this.columns[columnIndex].tasks[taskIndex].showNameInput);\n    },\n    onTaskDragEnd() {\n      // Метод, вызываемый при завершении перетаскивания задачи\n      // Здесь вы можете выполнить дополнительные действия после перемещения задачи\n    },\n    timeRemaining(deadline) {\n    const now = new Date();\n    const deadlineDate = new Date(deadline);\n\n    const timeDifference = deadlineDate - now;\n\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\n    const hours = Math.floor((timeDifference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    const minutes = Math.floor((timeDifference % (1000 * 60 * 60)) / (1000 * 60));\n    const seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);\n\n    return `${days} дней, ${hours} часов, ${minutes} минут, ${seconds} секунд`;\n  },\n  getNow: function() {\n    const today = new Date();\n    const date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    const dateTime = date + ' ' + time;\n    this.timestamp = dateTime;\n\n    // Обновляем время до дедлайна для каждой задачи\n    this.columns.forEach(column => {\n      column.tasks.forEach(task => {\n        task.timeRemaining = this.timeRemaining(task.deadline);\n      });\n    });\n  },\n  },\n  \n  components: {\n    draggable,\n  },\n};\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}