{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport draggable from 'vuedraggable';\nexport default {\n  data() {\n    return {\n      columns: []\n    };\n  },\n  methods: {\n    addColumn() {\n      this.columns.push({\n        name: '',\n        tasks: [],\n        showNameInput: false\n      });\n    },\n    addItem(columnIndex) {\n      if (this.columns[columnIndex]) {\n        this.columns[columnIndex].tasks.push({\n          name: '',\n          showNameInput: false,\n          columnIndex // новое свойство для хранения индекса колонки\n        });\n      }\n    },\n    removeTask(columnIndex, taskIndex) {\n      if (this.columns[columnIndex] && this.columns[columnIndex].tasks[taskIndex]) {\n        this.columns[columnIndex].tasks.splice(taskIndex, 1);\n      }\n    },\n    removeColumn(columnIndex) {\n      if (this.columns[columnIndex]) {\n        this.columns.splice(columnIndex, 1);\n      }\n    },\n    toggleNameInput(columnIndex) {\n      this.columns.forEach((column, index) => {\n        if (index !== columnIndex) {\n          column.showNameInput = false;\n        }\n      });\n      this.columns[columnIndex] && (this.columns[columnIndex].showNameInput = !this.columns[columnIndex].showNameInput);\n    },\n    toggleTaskNameInput(columnIndex, taskIndex) {\n      this.columns[columnIndex]?.tasks.forEach((task, index) => {\n        if (index !== taskIndex) {\n          task.showNameInput = false;\n        }\n      });\n      this.columns[columnIndex]?.tasks[taskIndex] && (this.columns[columnIndex].tasks[taskIndex].showNameInput = !this.columns[columnIndex].tasks[taskIndex].showNameInput);\n    },\n    onTaskDragEnd() {\n      // Метод, вызываемый при завершении перетаскивания задачи\n      // Здесь вы можете выполнить дополнительные действия после перемещения задачи\n    }\n  },\n  components: {\n    draggable\n  }\n};","map":{"version":3,"names":["ref","draggable","data","columns","methods","addColumn","push","name","tasks","showNameInput","addItem","columnIndex","removeTask","taskIndex","splice","removeColumn","toggleNameInput","forEach","column","index","toggleTaskNameInput","task","onTaskDragEnd","components"],"sources":["C:\\Users\\user\\Desktop\\tasker5\\sortable\\src\\components\\BoardComp.vue"],"sourcesContent":["<template>\n  <h1>доска</h1>\n  <draggable v-model=\"columns\" tag=\"div\" class=\"workspace\">\n    <template #item=\"{ element: column, index: i }\">\n      <draggable v-model=\"column.tasks\" tag=\"ul\" class=\"column\" :key=\"i\" @end=\"onTaskDragEnd\">\n        <template #header>\n        <input\n          v-if=\"column.showNameInput\"\n          v-model=\"column.name\" class=\"column-name-input column-name\" type=\"text\"\n          @keyup.enter=\"toggleNameInput(i)\"\n        />\n        <h3\n          v-else\n          @click=\"toggleNameInput(i)\"\n          class=\"column-name\">\n          <p v-show=\"column.name === ''\">{{ i }}</p>\n          {{ column.name }}\n        </h3>\n        <button class=\"delete btn\" @click=\"removeColumn(i)\">удалить</button>\n        </template>\n        <template #item=\"{ element: task, index: j }\">\n        <li class=\"task\" :key=\"j\">\n          <input\n            v-if=\"task.showNameInput\"\n            v-model=\"task.name\" class=\"task-name-input\" type=\"text\"\n            @keyup.enter=\"toggleTaskNameInput(i, j)\"\n          />\n          <h4\n            v-else\n            @click=\"toggleTaskNameInput(i, j)\"\n            class=\"task-name\">\n            <p v-show=\"task.name === ''\">{{ j }}</p>\n            {{ task.name }}\n          </h4>\n          <button class=\"delete btn\" @click=\"removeTask(i, j)\">удалить</button>\n        \n        </li>\n        </template>\n        <template #footer>\n        <div class=\"form-control\">\n          <button @click=\"addItem(i)\">создать таск</button>\n        </div>\n      </template>\n      <!-- </ul> -->\n      \n    </draggable>\n    </template>\n  </draggable>\n  <div class=\"form-control\">\n    <button @click=\"addColumn\">создать колонку</button>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport draggable from 'vuedraggable';\n\nexport default {\n  data() {\n    return {\n      columns: [],\n    };\n  },\n  methods: {\n    addColumn() {\n      this.columns.push({\n        name: '',\n        tasks: [],\n        showNameInput: false,\n      });\n    },\n    addItem(columnIndex) {\n      if (this.columns[columnIndex]) {\n        this.columns[columnIndex].tasks.push({\n          name: '',\n          showNameInput: false,\n          columnIndex, // новое свойство для хранения индекса колонки\n        });\n      }\n    },\n    removeTask(columnIndex, taskIndex) {\n      if (this.columns[columnIndex] && this.columns[columnIndex].tasks[taskIndex]) {\n        this.columns[columnIndex].tasks.splice(taskIndex, 1);\n      }\n    },\n    removeColumn(columnIndex) {\n      if (this.columns[columnIndex]) {\n        this.columns.splice(columnIndex, 1);\n      }\n    },\n    toggleNameInput(columnIndex) {\n      this.columns.forEach((column, index) => {\n        if (index !== columnIndex) {\n          column.showNameInput = false;\n        }\n      });\n      this.columns[columnIndex] && (this.columns[columnIndex].showNameInput = !this.columns[columnIndex].showNameInput);\n    },\n    toggleTaskNameInput(columnIndex, taskIndex) {\n      this.columns[columnIndex]?.tasks.forEach((task, index) => {\n        if (index !== taskIndex) {\n          task.showNameInput = false;\n        }\n      });\n      this.columns[columnIndex]?.tasks[taskIndex] && (this.columns[columnIndex].tasks[taskIndex].showNameInput = !this.columns[columnIndex].tasks[taskIndex].showNameInput);\n    },\n    onTaskDragEnd() {\n      // Метод, вызываемый при завершении перетаскивания задачи\n      // Здесь вы можете выполнить дополнительные действия после перемещения задачи\n    },\n  },\n  components: {\n    draggable,\n  },\n};\n</script>"],"mappings":";AAsDA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,SAAQ,MAAO,cAAc;AAEpC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACF,OAAO,CAACG,IAAI,CAAC;QAChBC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,aAAa,EAAE;MACjB,CAAC,CAAC;IACJ,CAAC;IACDC,OAAOA,CAACC,WAAW,EAAE;MACnB,IAAI,IAAI,CAACR,OAAO,CAACQ,WAAW,CAAC,EAAE;QAC7B,IAAI,CAACR,OAAO,CAACQ,WAAW,CAAC,CAACH,KAAK,CAACF,IAAI,CAAC;UACnCC,IAAI,EAAE,EAAE;UACRE,aAAa,EAAE,KAAK;UACpBE,WAAW,CAAE;QACf,CAAC,CAAC;MACJ;IACF,CAAC;IACDC,UAAUA,CAACD,WAAW,EAAEE,SAAS,EAAE;MACjC,IAAI,IAAI,CAACV,OAAO,CAACQ,WAAW,KAAK,IAAI,CAACR,OAAO,CAACQ,WAAW,CAAC,CAACH,KAAK,CAACK,SAAS,CAAC,EAAE;QAC3E,IAAI,CAACV,OAAO,CAACQ,WAAW,CAAC,CAACH,KAAK,CAACM,MAAM,CAACD,SAAS,EAAE,CAAC,CAAC;MACtD;IACF,CAAC;IACDE,YAAYA,CAACJ,WAAW,EAAE;MACxB,IAAI,IAAI,CAACR,OAAO,CAACQ,WAAW,CAAC,EAAE;QAC7B,IAAI,CAACR,OAAO,CAACW,MAAM,CAACH,WAAW,EAAE,CAAC,CAAC;MACrC;IACF,CAAC;IACDK,eAAeA,CAACL,WAAW,EAAE;MAC3B,IAAI,CAACR,OAAO,CAACc,OAAO,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;QACtC,IAAIA,KAAI,KAAMR,WAAW,EAAE;UACzBO,MAAM,CAACT,aAAY,GAAI,KAAK;QAC9B;MACF,CAAC,CAAC;MACF,IAAI,CAACN,OAAO,CAACQ,WAAW,MAAM,IAAI,CAACR,OAAO,CAACQ,WAAW,CAAC,CAACF,aAAY,GAAI,CAAC,IAAI,CAACN,OAAO,CAACQ,WAAW,CAAC,CAACF,aAAa,CAAC;IACnH,CAAC;IACDW,mBAAmBA,CAACT,WAAW,EAAEE,SAAS,EAAE;MAC1C,IAAI,CAACV,OAAO,CAACQ,WAAW,CAAC,EAAEH,KAAK,CAACS,OAAO,CAAC,CAACI,IAAI,EAAEF,KAAK,KAAK;QACxD,IAAIA,KAAI,KAAMN,SAAS,EAAE;UACvBQ,IAAI,CAACZ,aAAY,GAAI,KAAK;QAC5B;MACF,CAAC,CAAC;MACF,IAAI,CAACN,OAAO,CAACQ,WAAW,CAAC,EAAEH,KAAK,CAACK,SAAS,MAAM,IAAI,CAACV,OAAO,CAACQ,WAAW,CAAC,CAACH,KAAK,CAACK,SAAS,CAAC,CAACJ,aAAY,GAAI,CAAC,IAAI,CAACN,OAAO,CAACQ,WAAW,CAAC,CAACH,KAAK,CAACK,SAAS,CAAC,CAACJ,aAAa,CAAC;IACvK,CAAC;IACDa,aAAaA,CAAA,EAAG;MACd;MACA;IAAA;EAEJ,CAAC;EACDC,UAAU,EAAE;IACVtB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}