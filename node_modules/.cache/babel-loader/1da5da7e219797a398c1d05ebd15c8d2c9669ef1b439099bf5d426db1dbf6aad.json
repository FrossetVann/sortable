{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport draggable from 'vuedraggable';\nexport default {\n  data() {\n    return {\n      columns: [],\n      timestamp: \"\"\n    };\n  },\n  created() {\n    setInterval(this.updateTimeRemaining, 1000);\n  },\n  methods: {\n    addColumn() {\n      this.columns.push({\n        name: '',\n        tasks: [],\n        showNameInput: false\n      });\n    },\n    addItem(columnIndex) {\n      if (this.columns[columnIndex]) {\n        // Установим дедлайн через 3 дня от текущего момента\n        const deadline = new Date();\n        deadline.setDate(deadline.getDate() + 1); // Установим дедлайн через 3 дня\n        this.columns[columnIndex].tasks.push({\n          name: '',\n          showNameInput: false,\n          columnIndex,\n          deadline: deadline.toISOString() // Сохраняем дедлайн в формате ISO\n        });\n      }\n    },\n    removeTask(columnIndex, taskIndex) {\n      if (this.columns[columnIndex] && this.columns[columnIndex].tasks[taskIndex]) {\n        this.columns[columnIndex].tasks.splice(taskIndex, 1);\n      }\n    },\n    removeColumn(columnIndex) {\n      if (this.columns[columnIndex]) {\n        this.columns.splice(columnIndex, 1);\n      }\n    },\n    toggleNameInput(columnIndex) {\n      this.columns.forEach((column, index) => {\n        if (index !== columnIndex) {\n          column.showNameInput = false;\n        }\n      });\n      this.columns[columnIndex] && (this.columns[columnIndex].showNameInput = !this.columns[columnIndex].showNameInput);\n    },\n    toggleTaskNameInput(columnIndex, taskIndex) {\n      this.columns[columnIndex]?.tasks.forEach((task, index) => {\n        if (index !== taskIndex) {\n          task.showNameInput = false;\n        }\n      });\n      this.columns[columnIndex]?.tasks[taskIndex] && (this.columns[columnIndex].tasks[taskIndex].showNameInput = !this.columns[columnIndex].tasks[taskIndex].showNameInput);\n    },\n    onTaskDragEnd() {\n      // Метод, вызываемый при завершении перетаскивания задачи\n      // Здесь вы можете выполнить дополнительные действия после перемещения задачи\n    },\n    updateTimeRemaining() {\n      const now = new Date();\n      this.columns.forEach(column => {\n        column.tasks.forEach(task => {\n          const deadlineDate = new Date(task.deadline);\n          const timeDifference = deadlineDate - now;\n          const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\n          const hours = Math.floor(timeDifference % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n          const minutes = Math.floor(timeDifference % (1000 * 60 * 60) / (1000 * 60));\n          const seconds = Math.floor(timeDifference % (1000 * 60) / 1000);\n          task.timeRemaining = `${days} д. ${hours} ч. ${minutes} м. ${seconds} с.`;\n        });\n      });\n    }\n  },\n  components: {\n    draggable\n  }\n};","map":{"version":3,"names":["ref","draggable","data","columns","timestamp","created","setInterval","updateTimeRemaining","methods","addColumn","push","name","tasks","showNameInput","addItem","columnIndex","deadline","Date","setDate","getDate","toISOString","removeTask","taskIndex","splice","removeColumn","toggleNameInput","forEach","column","index","toggleTaskNameInput","task","onTaskDragEnd","now","deadlineDate","timeDifference","days","Math","floor","hours","minutes","seconds","timeRemaining","components"],"sources":["C:\\Users\\user\\Desktop\\tasker5\\sortable\\src\\views\\BoardComp.vue"],"sourcesContent":["<template>\n  <main>\n  <h1>доска</h1>\n  <draggable v-model=\"columns\" tag=\"div\" class=\"workspace\">\n    <template #item=\"{ element: column, index: i }\">\n      <draggable v-model=\"column.tasks\" tag=\"ul\" class=\"column\" :key=\"i\" @end=\"onTaskDragEnd\">\n        <template #header>\n          <input\n            v-if=\"column.showNameInput\"\n            v-model=\"column.name\" class=\"column-name-input column-name\" type=\"text\"\n            @keyup.enter=\"toggleNameInput(i)\"\n          />\n          <h3\n            v-else\n            @click=\"toggleNameInput(i)\"\n            class=\"column-name\">\n            <p v-show=\"column.name === ''\">{{ i }}</p>\n            {{ column.name }}\n          </h3>\n          <button class=\"delete btn\" @click=\"removeColumn(i)\">удалить</button>\n        </template>\n        <template #item=\"{ element: task, index: j }\">\n          <li class=\"task\" :key=\"j\">\n            <input\n              v-if=\"task.showNameInput\"\n              v-model=\"task.name\" class=\"task-name-input\" type=\"text\"\n              @keyup.enter=\"toggleTaskNameInput(i, j)\"\n            />\n            <h4\n              v-else\n              @click=\"toggleTaskNameInput(i, j)\"\n              class=\"task-name\">\n              <p v-show=\"task.name === ''\">{{ j }}</p>\n              {{ task.name }}\n              {{ task.timeRemaining }}\n            </h4>\n            <button class=\"delete btn\" @click=\"removeTask(i, j)\">удалить</button>\n          </li>\n        </template>\n        <template #footer>\n          <div class=\"form-control\">\n            <button @click=\"addItem(i)\">создать таск</button>\n          </div>\n        </template>\n      </draggable>\n    </template>\n    <div class=\"form-control\">\n    <button @click=\"addColumn\">создать колонку</button>\n  </div>\n  </draggable>\n\n</main>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport draggable from 'vuedraggable';\n\nexport default {\n  data() {\n    return {\n      columns: [],\n      timestamp: \"\"\n    };\n  },\n  created() {\n    setInterval(this.updateTimeRemaining, 1000);\n  },\n  methods: {\n    addColumn() {\n      this.columns.push({\n        name: '',\n        tasks: [],\n        showNameInput: false,\n      });\n    },\n    addItem(columnIndex) {\n      if (this.columns[columnIndex]) {\n        // Установим дедлайн через 3 дня от текущего момента\n        const deadline = new Date();\n        deadline.setDate(deadline.getDate() + 1); // Установим дедлайн через 3 дня\n        this.columns[columnIndex].tasks.push({\n          name: '',\n          showNameInput: false,\n          columnIndex,\n          deadline: deadline.toISOString(), // Сохраняем дедлайн в формате ISO\n        });\n      }\n    },\n    removeTask(columnIndex, taskIndex) {\n      if (this.columns[columnIndex] && this.columns[columnIndex].tasks[taskIndex]) {\n        this.columns[columnIndex].tasks.splice(taskIndex, 1);\n      }\n    },\n    removeColumn(columnIndex) {\n      if (this.columns[columnIndex]) {\n        this.columns.splice(columnIndex, 1);\n      }\n    },\n    toggleNameInput(columnIndex) {\n      this.columns.forEach((column, index) => {\n        if (index !== columnIndex) {\n          column.showNameInput = false;\n        }\n      });\n      this.columns[columnIndex] && (this.columns[columnIndex].showNameInput = !this.columns[columnIndex].showNameInput);\n    },\n    toggleTaskNameInput(columnIndex, taskIndex) {\n      this.columns[columnIndex]?.tasks.forEach((task, index) => {\n        if (index !== taskIndex) {\n          task.showNameInput = false;\n        }\n      });\n      this.columns[columnIndex]?.tasks[taskIndex] && (this.columns[columnIndex].tasks[taskIndex].showNameInput = !this.columns[columnIndex].tasks[taskIndex].showNameInput);\n    },\n    onTaskDragEnd() {\n      // Метод, вызываемый при завершении перетаскивания задачи\n      // Здесь вы можете выполнить дополнительные действия после перемещения задачи\n    },\n    updateTimeRemaining() {\n      const now = new Date();\n      this.columns.forEach(column => {\n        column.tasks.forEach(task => {\n          const deadlineDate = new Date(task.deadline);\n          const timeDifference = deadlineDate - now;\n          const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\n          const hours = Math.floor((timeDifference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n          const minutes = Math.floor((timeDifference % (1000 * 60 * 60)) / (1000 * 60));\n          const seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);\n          task.timeRemaining = `${days} д. ${hours} ч. ${minutes} м. ${seconds} с.`;\n        });\n      });\n    },\n  },\n  components: {\n    draggable,\n  },\n};\n</script>\n"],"mappings":";AAuDA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,SAAQ,MAAO,cAAc;AAEpC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRC,WAAW,CAAC,IAAI,CAACC,mBAAmB,EAAE,IAAI,CAAC;EAC7C,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACN,OAAO,CAACO,IAAI,CAAC;QAChBC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,aAAa,EAAE;MACjB,CAAC,CAAC;IACJ,CAAC;IACDC,OAAOA,CAACC,WAAW,EAAE;MACnB,IAAI,IAAI,CAACZ,OAAO,CAACY,WAAW,CAAC,EAAE;QAC7B;QACA,MAAMC,QAAO,GAAI,IAAIC,IAAI,CAAC,CAAC;QAC3BD,QAAQ,CAACE,OAAO,CAACF,QAAQ,CAACG,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE;QAC1C,IAAI,CAAChB,OAAO,CAACY,WAAW,CAAC,CAACH,KAAK,CAACF,IAAI,CAAC;UACnCC,IAAI,EAAE,EAAE;UACRE,aAAa,EAAE,KAAK;UACpBE,WAAW;UACXC,QAAQ,EAAEA,QAAQ,CAACI,WAAW,CAAC,CAAC,CAAE;QACpC,CAAC,CAAC;MACJ;IACF,CAAC;IACDC,UAAUA,CAACN,WAAW,EAAEO,SAAS,EAAE;MACjC,IAAI,IAAI,CAACnB,OAAO,CAACY,WAAW,KAAK,IAAI,CAACZ,OAAO,CAACY,WAAW,CAAC,CAACH,KAAK,CAACU,SAAS,CAAC,EAAE;QAC3E,IAAI,CAACnB,OAAO,CAACY,WAAW,CAAC,CAACH,KAAK,CAACW,MAAM,CAACD,SAAS,EAAE,CAAC,CAAC;MACtD;IACF,CAAC;IACDE,YAAYA,CAACT,WAAW,EAAE;MACxB,IAAI,IAAI,CAACZ,OAAO,CAACY,WAAW,CAAC,EAAE;QAC7B,IAAI,CAACZ,OAAO,CAACoB,MAAM,CAACR,WAAW,EAAE,CAAC,CAAC;MACrC;IACF,CAAC;IACDU,eAAeA,CAACV,WAAW,EAAE;MAC3B,IAAI,CAACZ,OAAO,CAACuB,OAAO,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;QACtC,IAAIA,KAAI,KAAMb,WAAW,EAAE;UACzBY,MAAM,CAACd,aAAY,GAAI,KAAK;QAC9B;MACF,CAAC,CAAC;MACF,IAAI,CAACV,OAAO,CAACY,WAAW,MAAM,IAAI,CAACZ,OAAO,CAACY,WAAW,CAAC,CAACF,aAAY,GAAI,CAAC,IAAI,CAACV,OAAO,CAACY,WAAW,CAAC,CAACF,aAAa,CAAC;IACnH,CAAC;IACDgB,mBAAmBA,CAACd,WAAW,EAAEO,SAAS,EAAE;MAC1C,IAAI,CAACnB,OAAO,CAACY,WAAW,CAAC,EAAEH,KAAK,CAACc,OAAO,CAAC,CAACI,IAAI,EAAEF,KAAK,KAAK;QACxD,IAAIA,KAAI,KAAMN,SAAS,EAAE;UACvBQ,IAAI,CAACjB,aAAY,GAAI,KAAK;QAC5B;MACF,CAAC,CAAC;MACF,IAAI,CAACV,OAAO,CAACY,WAAW,CAAC,EAAEH,KAAK,CAACU,SAAS,MAAM,IAAI,CAACnB,OAAO,CAACY,WAAW,CAAC,CAACH,KAAK,CAACU,SAAS,CAAC,CAACT,aAAY,GAAI,CAAC,IAAI,CAACV,OAAO,CAACY,WAAW,CAAC,CAACH,KAAK,CAACU,SAAS,CAAC,CAACT,aAAa,CAAC;IACvK,CAAC;IACDkB,aAAaA,CAAA,EAAG;MACd;MACA;IAAA,CACD;IACDxB,mBAAmBA,CAAA,EAAG;MACpB,MAAMyB,GAAE,GAAI,IAAIf,IAAI,CAAC,CAAC;MACtB,IAAI,CAACd,OAAO,CAACuB,OAAO,CAACC,MAAK,IAAK;QAC7BA,MAAM,CAACf,KAAK,CAACc,OAAO,CAACI,IAAG,IAAK;UAC3B,MAAMG,YAAW,GAAI,IAAIhB,IAAI,CAACa,IAAI,CAACd,QAAQ,CAAC;UAC5C,MAAMkB,cAAa,GAAID,YAAW,GAAID,GAAG;UACzC,MAAMG,IAAG,GAAIC,IAAI,CAACC,KAAK,CAACH,cAAa,IAAK,IAAG,GAAI,EAAC,GAAI,EAAC,GAAI,EAAE,CAAC,CAAC;UAC/D,MAAMI,KAAI,GAAIF,IAAI,CAACC,KAAK,CAAEH,cAAa,IAAK,IAAG,GAAI,EAAC,GAAI,EAAC,GAAI,EAAE,CAAC,IAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC,CAAC;UACrF,MAAMK,OAAM,GAAIH,IAAI,CAACC,KAAK,CAAEH,cAAa,IAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC,IAAK,IAAG,GAAI,EAAE,CAAC,CAAC;UAC7E,MAAMM,OAAM,GAAIJ,IAAI,CAACC,KAAK,CAAEH,cAAa,IAAK,IAAG,GAAI,EAAE,CAAC,GAAI,IAAI,CAAC;UACjEJ,IAAI,CAACW,aAAY,GAAK,GAAEN,IAAI,OAAOG,KAAK,OAAOC,OAAO,OAAOC,OAAO,KAAK;QAC3E,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC;EACDE,UAAU,EAAE;IACVzC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}